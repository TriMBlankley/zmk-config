/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

#define ALPHAS   0
#define CONTROL  1
#define NUMCHAR  2
#define QWERTY   3
#define BLENDER  4
#define UNREAL   5

/ {
    behaviors {
        excl_qmark: exclamation_queationmark {
            compatible = "zmk,behavior-mod-morph";
            label = "EXCL_QMARK";
            #binding-cells = <0>;
            bindings = <&kp EXCL>, <&kp QMARK>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_RSFT)>;
        };
        con_num: control_numchar {
        	compatible = "zmk,behavior-mod-morph";
        	label = "CON_NUM";
        	#binding-cells = <0>;
        	bindings = <&tog CONTROL>, <&tog NUMCHAR>;
        	mods = <(MOD_LSFT|MOD_RSFT)>;
        	keep-mods = <(MOD_RSFT)>;
    	};
    };
};


/ {
    keymap {
        compatible = "zmk,keymap";

        alphas_layer {
// ------------------------------------------------------------------------------------------------------------
// |  ESC  |  Q  |  D  |  R   |  W   |  B   |                       |  J   |  F   |  U    |  P   |   ;   | PSCRN |
// | SHIFT |  A  |  S  |  H   |  T   |  G   |                       |  Y   |  N   |  E    |  O   |   I   | APOS  |
// |  TAB  |  Z  |  X  |  M   |  C   |  V   |                       |  K   |  L   |  ,    |  .   |   !   | RSHFT |
// | CTRL  |  @  |     |      |      |      |TOG CON|   |  TOG QWER |      |      |       |      |       | RCTRL |
//                     | GUI  | LALT |LOWER | SPACE |   | BKSPC_DEL | RAISE| ENT  |  ALT  |
            bindings = <
&kp ESC    &kp Q   &kp D   &kp R     &kp W     &kp B                                   &kp J   &kp F     &kp U      &kp P    &kp SEMI    &kp PSCRN
&kp LSHFT  &kp A   &kp S   &kp H     &kp T     &kp G                                   &kp Y   &kp N     &kp E      &kp O    &kp I       &kp APOS
&kp TAB    &kp Z   &kp X   &kp M     &kp C     &kp V                                   &kp K   &kp L     &kp COMMA  &kp DOT  &excl_qmark &kp RSHFT
&kp LCTRL  &kp AT  &trans  &trans    &trans    &trans       &con_num     &tog QWERTY   &trans  &trans    &trans     &trans   &trans      &kp RCTRL
                           &kp LGUI  &kp LALT  &mo CONTROL  &kp SPACE    &kp BACKSPACE &mo NUMCHAR   &kp RET   &kp RALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        control_layer {
// ------------------------------------------------------------------------------------------------------------
// |  ESC  |     | INS | HOME | PG_UP|      |                   |      |       |   ^   |  >=   | VOL_DN| VOL_UP |
// | SHIFT |     | DEL | END  | PG_DN|      |                   |      |   <-  |   V   |  ->   | BRI_DN| BRI_UP|
// |  TAB  |     |     |      |      |      |                 |TOG BLEND|TOG UNREAL|   |       |       | RSHFT  |
// | CTRL  | BT1 | BT2 |  BT3 |  BT4 |  BT5 | CON_NUM|  | QWERT |BT CLR|       |       |       |       | RCTRL  |
//                     |  GUI | LALT | LOWER|  SPACE |  | BKSPC | RAISE| BTCLR | RALT  |
            bindings = <
&kp ESC    &trans        &kp INS       &kp HOME      &kp PG_UP     &trans                                 &trans         &trans     &kp UP     &kp C_PP     &kp C_VOL_DN &kp C_VOL_UP
&kp LSHFT  &trans        &kp DEL       &kp END       &kp PG_DN     &trans                                 &trans         &kp LEFT   &kp DOWN   &kp RIGHT    &kp C_BRI_DN &kp C_BRI_UP
&kp TAB    &trans        &trans        &trans        &trans        &trans                                 &tog BLENDER   &trans     &trans     &trans       &trans       &kp RSHFT
&kp LCTRL  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &con_num   &tog QWERTY   &bt BT_CLR     &trans     &trans     &trans       &trans       &kp RCTRL
                                       &kp LGUI      &kp LALT      &mo CONTROL   &kp SPACE  &kp BACKSPACE &mo NUMCHAR    &kp RET    &kp RALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        numchar_layer {
// ------------------------------------------------------------------------------------------------------------
// |  ESC  |  $  |  {  |  }   |  |   |      |                  | DIV  |   7   |   8   |  9   |   +   |        |
// |  TAB  |  #  |  (  |  )   |  \   |  /   |                  |  *   |   4   |   5   |  6   |   0   |   =    |
// | SHIFT |  &  |  [  |  ]   |  <   |  >   |                  |  ^   |   1   |   2   |  3   |   -   | RSHFT  |
// | CTRL  |  @  |  %  |  ~   |  `   |  _   |CON_NUM|  | QWERT |      |       |       |      |       | RCTRL  |
//                     | ALT  | GUI  | LOWER| SPACE |  | BKSPC | RAISE|  ENT  | BTCLR |
            bindings = <
&kp ESC    &kp DLLR  &kp LBRC   &kp RBRC   &kp PIPE   &trans                                 &kp KP_DIVIDE       &kp N7   &kp N8       &kp N9     &kp KP_PLUS      &trans
&kp LSHFT  &kp HASH  &kp LPAR   &kp RPAR   &kp BSLH   &kp FSLH                               &kp KP_MULTIPLY     &kp N4   &kp N5       &kp N6     &kp N0           &kp EQUAL
&kp TAB    &kp AMPS  &kp LBKT   &kp RBKT   &kp LT     &kp GT                                 &kp CARET           &kp N1   &kp N2       &kp N3     &kp KP_SUBTRACT  &kp RSHFT
&kp LCTRL  &kp AT    &kp PRCNT  &kp TILDE  &kp GRAVE  &kp UNDER    &con_num    &tog QWERTY   &trans              &trans   &trans       &trans     &trans           &kp RCTRL
                                &kp LGUI   &kp LALT   &mo CONTROL  &kp SPACE   &kp BACKSPACE &mo NUMCHAR         &kp RET  &kp RALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        qwerty_layer {
// ------------------------------------------------------------------------------------------------------------
// |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
// | SHIFT |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
// |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   | SHIFT |
// | CTRL  |  Z  |  X  |  C   |  V   |  B   | CON_NUM|  | QWERT |  N   |  M    |  ,    |  .   |   /   | CTRL  |
//                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| &bt BT_CLR | GUI   |
            bindings = <
&kp ESC   &kp N1 &kp N2 &kp N3   &kp N4    &kp N5                                  &kp N6       &kp N7   &kp N8    &kp N9  &kp N0   &kp GRAVE
&kp LSHFT &kp Q  &kp W  &kp E    &kp R     &kp T                                   &kp Y        &kp U    &kp I     &kp O   &kp P    &kp MINUS
&kp TAB   &kp A  &kp S  &kp D    &kp F     &kp G                                   &kp H        &kp J    &kp K     &kp L   &kp SEMI &kp RSHFT
&kp LCTRL &kp Z  &kp X  &kp C    &kp V     &kp B       &con_num      &tog QWERTY   &kp N        &kp M    &kp COMMA &kp DOT &kp FSLH &kp RCTRL
                        &kp LGUI &kp LALT  &mo CONTROL &kp SPACE     &kp BACKSPACE &mo NUMCHAR  &kp RET  &kp RALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        blender_layer {
// ------------------------------------------------------------------------------------------------------------
// |  ESC  |     |     |      |      |      |                  |      |       |       |      |       |        |
// |  TAB  |     |     |      |      |      |                  |      |       |       |      |       |        |
// | SHIFT |     |     |      |      |      |                  |      |       |       |      |       | RSHFT  |
// | CTRL  |     |     |      |      |      |CON_NUM|  | QWERT |      |       |       |      |       | RCTRL  |
//                     | ALT  | GUI  | LOWER| SPACE |  | BKSPC | RAISE|  ENT  | BTCLR |
            bindings = <
&kp ESC     &trans   &trans  &trans   &trans   &trans                                &trans       &trans   &trans   &trans   &trans    &trans
&kp LSHFT   &trans   &trans  &trans   &trans   &trans                                &trans       &trans   &trans   &trans   &trans    &trans
&kp TAB     &trans   &trans  &trans   &trans   &trans                                &trans       &trans   &trans   &trans   &trans    &kp RSHFT
&kp LCTRL   &trans   &trans  &trans   &trans   &trans      &con_num    &tog QWERTY   &trans       &trans   &trans   &trans   &trans    &kp RCTRL
                             &kp LGUI &kp LALT &mo CONTROL &kp SPACE   &kp BACKSPACE &mo NUMCHAR  &kp RET  &kp RALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };
            unreal_layer {
// ------------------------------------------------------------------------------------------------------------
// |  ESC  |     |     |      |      |      |                  |      |       |       |      |       |        |
// |  TAB  |     |     |      |      |      |                  |      |       |       |      |       |        |
// | SHIFT |     |     |      |      |      |                  |      |       |       |      |       | RSHFT  |
// | CTRL  |     |     |      |      |      |CON_NUM|  | QWERT |      |       |       |      |       | RCTRL  |
//                     | ALT  | GUI  | LOWER| SPACE |  | BKSPC | RAISE|  ENT  | BTCLR |
            bindings = <
&kp ESC     &trans   &trans  &trans   &trans   &trans                                &trans       &trans   &trans   &trans   &trans    &trans
&kp LSHFT   &trans   &trans  &trans   &trans   &trans                                &trans       &trans   &trans   &trans   &trans    &trans
&kp TAB     &trans   &trans  &trans   &trans   &trans                                &trans       &trans   &trans   &trans   &trans    &kp RSHFT
&kp LCTRL   &trans   &trans  &trans   &trans   &trans      &con_num    &tog QWERTY   &trans       &trans   &trans   &trans   &trans    &kp RCTRL
                             &kp LGUI &kp LALT &mo CONTROL &kp SPACE   &kp BACKSPACE &mo NUMCHAR  &kp RET  &kp RALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };
    };
};
